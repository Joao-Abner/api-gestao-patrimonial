# Variáveis para facilitar os testes
@baseUrl = http://localhost:3000

###
# (1) POST - Criar novos Patrimônios
# Execute estas requisições primeiro para popular os dados em memória.
# Se você estiver usando a extensão REST Client no VSCode, clique em "Send Request" acima de cada uma.

# Criar o primeiro patrimônio
POST {{baseUrl}}/patrimonios
Content-Type: application/json

{
  "nome": "Monitor Dell 24 polegadas",
  "numeroPatrimonio": 1001,
  "descricao": "Monitor Full HD para desenvolvimento",
  "valor": 1200.50,
  "responsavel": "Alice Silva",
  "status": "ativo",
  "localizacao": {
    "bloco": "R",
    "piso": "3",
    "sala": "301"
  }
}

###
# Criar o patrimônio inválido
POST {{baseUrl}}/patrimonios
Content-Type: application/json

{
  "nome": "",
  "numeroPatrimonio": "abc",
  "descricao": 0,
  "valor": "invalid", 
  "responsavel": 0,
  "status": "invalid",
  "observacoes": 0,
  "localizacao": {
    "bloco": "",
    "piso": 0,
    "sala": 0
  }
}

###
# Criar patrimônio inativo
POST {{baseUrl}}/patrimonios
Content-Type: application/json

{
  "nome": "Monitor Dell 20 polegadas",
  "numeroPatrimonio": 900,
  "descricao": "Monitor Full HD para desenvolvimento",
  "valor": 1100.50,
  "responsavel": "Pedro Silva",
  "status": "inativo",
  "localizacao": {
    "bloco": "R",
    "piso": "2",
    "sala": "201"
  }
}

###
# (2) GET - Listar Patrimônios com Filtro e Paginação
GET {{baseUrl}}/patrimonios?status=inativo&page=1

###
# Listar patrimônios por id
GET {{baseUrl}}/patrimonios/1

###
# Buscar Patrimônio com ID Inválido
GET {{baseUrl}}/patrimonios/abc
